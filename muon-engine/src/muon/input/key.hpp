#pragma once

#include "SDL3/SDL_scancode.h"

namespace muon::input {

enum class Scancode {
    Unknown = SDL_SCANCODE_UNKNOWN,

    KeyA = SDL_SCANCODE_A,
    KeyB = SDL_SCANCODE_B,
    KeyC = SDL_SCANCODE_C,
    KeyD = SDL_SCANCODE_D,
    KeyE = SDL_SCANCODE_E,
    KeyF = SDL_SCANCODE_F,
    KeyG = SDL_SCANCODE_G,
    KeyH = SDL_SCANCODE_H,
    KeyI = SDL_SCANCODE_I,
    KeyJ = SDL_SCANCODE_J,
    KeyK = SDL_SCANCODE_K,
    KeyL = SDL_SCANCODE_L,
    KeyM = SDL_SCANCODE_M,
    KeyN = SDL_SCANCODE_N,
    KeyO = SDL_SCANCODE_O,
    KeyP = SDL_SCANCODE_P,
    KeyQ = SDL_SCANCODE_Q,
    KeyR = SDL_SCANCODE_R,
    KeyS = SDL_SCANCODE_S,
    KeyT = SDL_SCANCODE_T,
    KeyU = SDL_SCANCODE_U,
    KeyV = SDL_SCANCODE_V,
    KeyW = SDL_SCANCODE_W,
    KeyX = SDL_SCANCODE_X,
    KeyY = SDL_SCANCODE_Y,
    KeyZ = SDL_SCANCODE_Z,

    NumRow1 = SDL_SCANCODE_1,
    NumRow2 = SDL_SCANCODE_2,
    NumRow3 = SDL_SCANCODE_3,
    NumRow4 = SDL_SCANCODE_4,
    NumRow5 = SDL_SCANCODE_5,
    NumRow6 = SDL_SCANCODE_6,
    NumRow7 = SDL_SCANCODE_7,
    NumRow8 = SDL_SCANCODE_8,
    NumRow9 = SDL_SCANCODE_9,
    NumRow0 = SDL_SCANCODE_0,

    Enter = SDL_SCANCODE_RETURN,
    Escape = SDL_SCANCODE_ESCAPE,
    Backspace = SDL_SCANCODE_BACKSPACE,
    Tab = SDL_SCANCODE_TAB,
    Space = SDL_SCANCODE_SPACE,

    Minus = SDL_SCANCODE_MINUS,
    Equals = SDL_SCANCODE_EQUALS,
    LeftBracket = SDL_SCANCODE_LEFTBRACKET,
    RightBracket = SDL_SCANCODE_RIGHTBRACKET,
    Backslash = SDL_SCANCODE_BACKSLASH,
    NonUsHash = SDL_SCANCODE_NONUSHASH,
    Semicolon = SDL_SCANCODE_SEMICOLON,
    Apostrophe = SDL_SCANCODE_APOSTROPHE,
    Grave = SDL_SCANCODE_GRAVE,
    Comma = SDL_SCANCODE_COMMA,
    Period = SDL_SCANCODE_PERIOD,
    Slash = SDL_SCANCODE_SLASH,

    Capslock = SDL_SCANCODE_CAPSLOCK,

    Function1 = SDL_SCANCODE_F1,
    Function2 = SDL_SCANCODE_F2,
    Function3 = SDL_SCANCODE_F3,
    Function4 = SDL_SCANCODE_F4,
    Function5 = SDL_SCANCODE_F5,
    Function6 = SDL_SCANCODE_F6,
    Function7 = SDL_SCANCODE_F7,
    Function8 = SDL_SCANCODE_F8,
    Function9 = SDL_SCANCODE_F9,
    Function10 = SDL_SCANCODE_F10,
    Function11 = SDL_SCANCODE_F11,
    Function12 = SDL_SCANCODE_F12,

    Printscreen = SDL_SCANCODE_PRINTSCREEN,
    ScrollLock = SDL_SCANCODE_SCROLLLOCK,
    Pause = SDL_SCANCODE_PAUSE,
    Insert = SDL_SCANCODE_INSERT,
    Home = SDL_SCANCODE_HOME,
    PageUp = SDL_SCANCODE_PAGEUP,
    Delete = SDL_SCANCODE_DELETE,
    End = SDL_SCANCODE_END,
    PageDown = SDL_SCANCODE_PAGEDOWN,
    Right = SDL_SCANCODE_RIGHT,
    Left = SDL_SCANCODE_LEFT,
    Down = SDL_SCANCODE_DOWN,
    Up = SDL_SCANCODE_UP,

    NumLock = SDL_SCANCODE_NUMLOCKCLEAR,
    KeyPadDivide = SDL_SCANCODE_KP_DIVIDE,
    KeyPadMultiply = SDL_SCANCODE_KP_MULTIPLY,
    KeyPadMinus = SDL_SCANCODE_KP_MINUS,
    KeyPadPlus = SDL_SCANCODE_KP_PLUS,
    KeyPadEnter = SDL_SCANCODE_KP_ENTER,
    KeyPad1 = SDL_SCANCODE_KP_1,
    KeyPad2 = SDL_SCANCODE_KP_2,
    KeyPad3 = SDL_SCANCODE_KP_3,
    KeyPad4 = SDL_SCANCODE_KP_4,
    KeyPad5 = SDL_SCANCODE_KP_5,
    KeyPad6 = SDL_SCANCODE_KP_6,
    KeyPad7 = SDL_SCANCODE_KP_7,
    KeyPad8 = SDL_SCANCODE_KP_8,
    KeyPad9 = SDL_SCANCODE_KP_9,
    KeyPad0 = SDL_SCANCODE_KP_0,
    KeyPadPeriod = SDL_SCANCODE_KP_PERIOD,
    KeyPadComma = SDL_SCANCODE_KP_COMMA,
    KeyPadEqualSign = SDL_SCANCODE_KP_EQUALSAS400,
    KeyPadEquals = SDL_SCANCODE_KP_EQUALS,

    NonUsBackslash = SDL_SCANCODE_NONUSBACKSLASH,

    Mute = SDL_SCANCODE_MUTE,
    VolumeUp = SDL_SCANCODE_VOLUMEUP,
    VolumeDown = SDL_SCANCODE_VOLUMEDOWN,

    LeftControl = SDL_SCANCODE_LCTRL,
    LeftShift = SDL_SCANCODE_LSHIFT,
    LeftAlt = SDL_SCANCODE_LALT,
    LeftSuper = SDL_SCANCODE_LGUI,
    RightControl = SDL_SCANCODE_RCTRL,
    RightShift = SDL_SCANCODE_RSHIFT,
    RightAlt = SDL_SCANCODE_RALT,
    RightSuper = SDL_SCANCODE_RGUI,
};

}
